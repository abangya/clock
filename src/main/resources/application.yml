spring:
  profiles:
    active: @profileActive@
  #aop注解注意：proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。
  #如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。
  #如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代理。
  #如果不给出 proxy-target-class，就按 proxy-target-class=“false”对待，也即是按JDK proxy来处理的。
  aop:
    #添加@EnableAspectJautoProxy。
    auto: true
    #true表示基于类的代理将使用,false表示默认使用Jdk基于接口的代理
    proxy-target-class: true
    #spring.jmx是默认打开的每个jmx名字必须是唯一的
  jmx:
    default-domain: deyi_clock

mybatis:
  configuration:
    call-setters-on-nulls: true
    variables:
      table_name: "demo_"
  type-aliases-package: com.deyi.clock.domain
  config-locations: classpath*:mybatis-config.xml
  mapper-locations: classpath*:com/deyi/clock/dao/mapper/*.xml

#pagehelper
pagehelper:
  offsetAsPageNum: true
  rowBoundsWithCount: true
  helperDialect: mysql
  #启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
  #禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据
  reasonable: false
  #支持通过Mapper接口参数来传递分页参数
  supportMethodsArguments: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero。
  params: count=countSql
  #当设置为true的时候，如果pagesize设置为0（或RowBounds的limit=0），就不执行分页，返回全部结果
  page-size-zero: true

logging:
  level:
    com.deyi.clock.dao: DEBUG